# Priveledge escalation
Ok, we have a shell. Now what? Most shells tend to be unstable and non-interactive. Time to exploit of a vulnerability, design flaw, or configuration oversight in an operating system or application to `gain unauthorized access` to resources that are usually restricted from the users.

On Windows the options are often more limited. It's sometimes possible to find passwords for `running services in the registry`. `VNC servers`, for example, frequently leave passwords in the registry stored in plaintext. Some versions of the `FileZilla FTP server` also leave credentials in an XML file at `C:\Program Files\FileZilla Server\FileZilla Server.xml`
 or `C:\xampp\FileZilla Server\FileZilla Server.xml`. These can be `MD5 hashes` or in plaintext, depending on the version.

Ideally on Windows you would obtain a shell running as the `SYSTEM user`, or an `administrator account` running with high privileges. In such a situation it's possible to simply add your own account (in the administrators group) to the machine, then log in over `RDP`, `telnet`, `winexe`, `psexec`, `WinRM` or any number of other methods, dependent on the services running on the box.

The syntax for this is as follows:
- `net user <username> <password> /add`
- `net localgroup administrators <username> /add`

